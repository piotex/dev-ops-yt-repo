---
- name: Install and configure Jenkins on CentOS 8
  hosts: jenkins
  become: yes
  remote_user: jenkins_agent
  gather_facts: no
  # vars:
  #   jenkins_plugins:
  #     - name: pipeline-model-extensions
  #       version: "1.7.1"
  #   jenkins_home: /var/lib/jenkins/
  #   jenkins_admin_username: admin
  #   jenkins_admin_password: admin
  #   jenkins_plugin_timeout: 30
  #   jenkins_plugins_state: present
  #   jenkins_plugin_updates_expiration: 86400
  #   jenkins_plugins_install_dependencies: true
  #   jenkins_updates_url: "https://updates.jenkins.io"
  #   jenkins_connection_delay: 5
  #   jenkins_connection_retries: 60
  #   jenkins_home: /var/lib/jenkins
  #   jenkins_hostname: localhost
  #   jenkins_http_port: 8080
  #   jenkins_jar_location: /opt/jenkins-cli.jar
  #   jenkins_url_prefix: ""
  #   jenkins_java_options: "-Djenkins.install.runSetupWizard=false"

  tasks:
    - name: Get current datetime from WorldTimeAPI
      shell: "curl -s 'http://worldtimeapi.org/api/timezone/Europe/Warsaw' | grep -oE '\"datetime\":\"[^\"]+\"' | cut -d'\"' -f4"
      register: world_time

    - name: Set system time
      command: "date -s '{{ world_time.stdout }}'"

    - name: Download Jenkins repository file
      get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Import Jenkins GPG key
      rpm_key:
        key: https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key

    - name: Upgrade system packages
      yum:
        name: '*'
        state: latest

    - name: Install required dependencies
      yum:
        name: "{{ item }}"
        state: present
      loop:
        - fontconfig
        - java-17-openjdk

    - name: Install Jenkins
      yum:
        name: jenkins
        state: present

    - name: Reload systemd manager configuration
      systemd:
        daemon_reload: yes

    - name: Enable Jenkins service
      systemd:
        name: jenkins
        enabled: yes

    - name: Start Jenkins service
      systemd:
        name: jenkins
        state: started

    - name: Check Jenkins service status
      shell: "systemctl status jenkins.service | grep Active:"
      register: jenkins_status_output

    - name: Display Jenkins service status
      debug:
        var: jenkins_status_output.stdout_lines

    - name: Configure firewall for Jenkins
      firewalld:
        state: enabled
        permanent: yes
        service: jenkins

    - name: Add Jenkins port to firewall
      firewalld:
        state: enabled
        permanent: yes
        port: "8080/tcp"

    - name: Reload firewall configuration
      command: firewall-cmd --reload

    - name: Add HTTP service to firewall
      firewalld:
        state: enabled
        permanent: yes
        service: http




    - name: Create directories for Jenkins
      become: yes
      file:
        path: "{{ item }}"
        state: directory
        owner: jenkins
        group: jenkins
        recurse: yes
      with_items:
        - '/var/cache/jenkins/tmp'
        - '/var/cache/jenkins/heapdumps'
        - '/var/lib/jenkins/plugins'
    - name: Update JENKINS_JAVA_OPTIONS
      become: yes
      lineinfile:
        path: "/usr/lib/systemd/system/jenkins.service"
        regexp: ".*-Djava.awt.headless=true.*"
        line: 'JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -Djenkins.install.runSetupWizard=false -Djava.io.tmpdir=/var/cache/jenkins/tmp/ -Dorg.apache.commons.jelly.tags.fmt.timeZone=America/New_York -Duser.timezone=America/New_York"'
        state: present

    - name: Update JENKINS_ARGS
      become: yes
      lineinfile:
        path: "/usr/lib/systemd/system/jenkins.service"
        regexp: ".*JENKINS_ARGS=.*"
        line: 'JENKINS_ARGS="--pluginroot=/var/cache/jenkins/plugins"'
        state: present
    # - name: Create limits file
    #   become: yes
    #   copy:
    #     dest: "/etc/security/limits.d/30-jenkins.conf"
    #     src: "limits.d/30-jenkins.conf"
    - name: download jenkins-plugin-manager
      get_url:
        url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.12.14/jenkins-plugin-manager-2.12.14.jar
        dest: $HOME/jenkins-plugin-manager.jar
    - name: Copy the plugins.yaml file
      copy:
        dest: "$HOME/plugins.yaml"
        src: "plugins.yaml"
    - name: Copy the jenkins.yaml file
      become: yes
      copy:
        dest: "/var/lib/jenkins/jenkins.yaml"
        src: "jenkins.yaml"
    - name: Copy the init files
      become: yes
      copy:
        dest: "/var/lib/jenkins/init.groovy.d/"
        src: "init.groovy.d/"
    - name: run the jenkins-plugin-manager
      become: yes
      command: java -jar /root/jenkins-plugin-manager.jar --jenkins-version 2.426.3 --plugin-file $HOME/plugins.yaml --plugin-download-directory /var/lib/jenkins/plugins
      # command: java -jar jenkins-plugin-manager.jar --jenkins-version 2.426.3 --plugin-file plugins.yaml --plugin-download-directory /var/lib/jenkins/plugins
    - name: update JENKINS_HOME ownership
      become: yes
      file:
        path: /var/lib/jenkins
        owner: jenkins
        group: jenkins
        state: directory
        recurse: yes


    - name: Create directories for Jenkins
      become: yes
      file:
        path: "/var/lib/jenkins/jobs/test_init_proj"
        state: directory
        owner: jenkins
        group: jenkins
        recurse: yes
        
    - name: copy job
      become: yes
      copy:
        dest: "/var/lib/jenkins/jobs/test_init_proj/config.xml"
        src: "job1.xml"

    - name: restart jenkins service
      become: yes
      systemd:
        name: jenkins
        state: restarted